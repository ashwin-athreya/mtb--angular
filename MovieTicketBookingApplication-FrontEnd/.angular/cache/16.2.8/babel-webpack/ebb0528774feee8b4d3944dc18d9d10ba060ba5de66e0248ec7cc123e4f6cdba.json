{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { pipe, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ThetreService = /*#__PURE__*/(() => {\n  class ThetreService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = 'http://localhost:8000';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    getAllTheatres() {\n      return this.httpClient.get(this.url + '/theatre' + '/all');\n      pipe(catchError(this.handleError));\n    }\n    deleteTheatre(TheatreId) {\n      return this.httpClient.delete(this.url + '/theatre/delete/' + TheatreId).pipe(catchError(this.handleError));\n    }\n    addTheatre(theatre) {\n      return this.httpClient.post(this.url + '/theatre/insert', JSON.stringify(theatre), this.httpOptions).pipe(catchError(this.handleError));\n    }\n    updateTheatre(theatre) {\n      console.log(theatre);\n      return this.httpClient.put(this.url + '/theatre/update', JSON.stringify(theatre), this.httpOptions).pipe(catchError(this.handleError));\n    }\n    findTheatre(id) {\n      return this.httpClient.get(this.url + '/theatre/find/' + id).pipe(catchError(this.handleError));\n    }\n    findTheatresbyMovie(movieId) {\n      return this.httpClient.get(this.url + '/theatre/findbyMovie/' + movieId).pipe(catchError(this.handleError));\n    }\n    handleError(eResponse) {\n      if (eResponse.error instanceof ErrorEvent) {\n        console.log('Client Side Error =' + eResponse.error.message);\n        console.log('Status Code=' + eResponse.status);\n      } else {\n        console.log('Server Side Error =' + eResponse.error.message);\n        console.log('Status Code=' + eResponse.status);\n      }\n      return throwError(eResponse.error.message);\n    }\n    static #_ = this.ɵfac = function ThetreService_Factory(t) {\n      return new (t || ThetreService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ThetreService,\n      factory: ThetreService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ThetreService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}